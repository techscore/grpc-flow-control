plugins {
    id("org.springframework.boot") version "2.1.6.RELEASE"
    id("org.jetbrains.kotlin.jvm") version "1.3.40"
    id("org.jetbrains.kotlin.kapt") version "1.3.40"
    id("org.jetbrains.kotlin.plugin.spring") version "1.3.40"
    id("com.google.cloud.tools.jib") version "1.3.0"
    id("com.google.protobuf") version "0.8.9"
    id("idea")
}
apply plugin: "io.spring.dependency-management"

group = "techscore.com"
version = "0.0.0-SNAPSHOT"

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

compileKotlin {
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
        apiVersion = "1.3"
        languageVersion = "1.3"
    }
}

repositories {
    google()
    jcenter()
    mavenCentral()
    mavenLocal()
}

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

springBoot {
    buildInfo()
}

dependencies {
    implementation("net.devh:grpc-spring-boot-starter:2.4.0.RELEASE")
    implementation("net.devh:grpc-server-spring-boot-starter:2.4.0.RELEASE")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.3.40")
    implementation("org.jetbrains.kotlin:kotlin-reflect:1.3.40")
    implementation("io.grpc:grpc-protobuf:1.21.0")
    implementation("io.grpc:grpc-stub:1.21.0")
    implementation("io.grpc:grpc-services:1.21.0")
    implementation("io.grpc:grpc-netty-shaded:1.21.0")
    implementation("io.grpc:protoc-gen-grpc-java:1.21.0")
    implementation("com.google.api.grpc:googleapis-common-protos:0.0.3")

    "kapt"("org.springframework.boot:spring-boot-configuration-processor")
    "kapt"("org.springframework:spring-context-indexer")

    "developmentOnly"("org.springframework.boot:spring-boot-devtools")

    testCompile("org.springframework.boot:spring-boot-starter-test")
}



protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.7.1"
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.21.0'
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}